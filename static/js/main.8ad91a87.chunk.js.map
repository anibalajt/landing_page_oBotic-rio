{"version":3,"sources":["constants/features.js","constants/color.js","components/NavBar.js","components/Spotlight.js","components/step.js","containers/HomePage.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["name_menus","my_grupo","add_group","require","NavBar","route","currentFeature","dispatch","isSearching","params","feature","className","style","backgroundColor","Color","borderColor","href","features","map","key","to","pathname","Spotlight","backdrop","backgroundImage","steps","name","icon","Step","Grid","container","spacing","i","xs","md","item","FormLabel","dangerouslySetInnerHTML","__html","HomePage","useEffect","Routes","props","previousLocation","location","this","state","modal","exact","path","component","Component","withRouter","App","moviesFound","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8ad91a87.chunk.js","sourcesContent":["// 500px featured photos\nexport default [\"my_grupo\", \"add_group\"];\nexport const name_menus = {\n  my_grupo: \"Mi grupo\",\n  add_group: \"Crear mi grupo\",\n};\n","export default {\n  navBarColor: \"#0e0918\",\n  colorSegundary: \"#dc2d76\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport features, { name_menus } from \"../constants/features\";\nimport Color from \"../constants/color\";\nrequire(\"../style/NavBar.scss\");\n\nconst NavBar = ({ route, dispatch, isSearching }) => {\n  const currentFeature = route ? route.params.feature : null;\n\n  return (\n    <div\n      className=\"NavBar\"\n      style={{\n        backgroundColor: Color.navBarColor,\n        borderColor: Color.colorSegundary,\n      }}\n    >\n      <div className=\"NavBar-title\">\n        <a href=\"/\" className=\"NavBar-link\">\n          oBotic√°rio\n        </a>\n      </div>\n      <div className=\"NavBar-links\">\n        {features.map((feature) => {\n          let className = \"NavBar-link\";\n\n          if (currentFeature === feature) {\n            className = `${className} ${className}--selected`;\n          }\n\n          return (\n            <Link\n              key={feature}\n              className={className}\n              to={{\n                pathname: `/${feature === \"home\" ? \"\" : feature}`,\n              }}\n            >\n              {name_menus[feature]}\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Spotlight = ({ backdrop }) => {\n  return (\n    <div className=\"spotlight\">\n      <div className=\"bd-dark\">\n        <figure>\n          <div className=\"spotlight-gradient\"></div>\n          <div\n            style={{\n              // backgroundImage: `url(${backdrop})`,\n              backgroundImage:\n                \"url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/9sXHqZTet3Zg5tgcc0hCDo8Tn35.jpg)\",\n            }}\n            className=\"lazy\"\n          />\n        </figure>\n      </div>\n    </div>\n  );\n};\nexport default Spotlight;\n","import React from \"react\";\nimport { Grid, FormLabel } from \"@material-ui/core\";\n\nconst steps = [\n  {\n    name: `crea tu grupo de amigos <b>secretos</b>`,\n    icon:\n      \"https://www.summitfirc.org/wp-content/uploads/2016/10/volunteer-icon-23.png\",\n  },\n  {\n    name: `Todos escogen sus <b>opciones de regalo</b>`,\n    icon: \"https://www.summitfirc.org/wp-content/uploads/2018/08/targe.png\",\n  },\n  {\n    name: `Se realiza el <b>sorteo</b> de forma aleatoria`,\n    icon:\n      \"https://www.summitfirc.org/wp-content/uploads/2019/02/conversation-1.png\",\n  },\n  {\n    name: `<b>Intercambia regalos</b> en la fecha acordada`,\n    icon:\n      \"https://www.summitfirc.org/wp-content/uploads/2016/10/volunteer-icon-23.png\",\n  },\n];\nconst Step = ({}) => {\n  return (\n    <>\n      <Grid container spacing={24}>\n        {steps.map(({ name, icon }, i) => (\n          <Grid key={i} xs={6} md={3} item className=\"step\">\n            <div className=\"step_number\">{i}</div>\n            <div className=\"step_body\">\n              <FormLabel className=\"step_name\">\n                <div dangerouslySetInnerHTML={{ __html: name }} />\n              </FormLabel>\n              <div\n                className=\"step_icon\"\n                style={{\n                  backgroundImage: `url(${icon})`,\n                }}\n              ></div>\n            </div>\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n};\nexport default Step;\n","import React, { useEffect, useState } from \"react\";\n\nimport Spotlight from \"../components/Spotlight\";\nimport Steps from \"../components/step\";\n\nconst HomePage = ({}) => {\n  useEffect(() => {}, []);\n\n  return (\n    <div className=\"HomePage\">\n      <Spotlight />\n      <div className=\"backgroud-steps wrapper row\">\n        <div className=\"steps\">\n          <Steps />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\n// import { Helmet } from \"react-helmet\";\n\nimport HomePage from \"./containers/HomePage\";\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.previousLocation = this.props.location;\n  }\n\n  componentWillUpdate() {\n    let { location } = this.props;\n    if (!(location.state && location.state.modal)) {\n      this.previousLocation = location;\n    }\n  }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n      <Fragment>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n\n          <Route>{\"no match\"}</Route>\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(Routes);\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport NavBar from \"./components/NavBar\";\n// import { Loading } from \"./components/Loaders\";\n\nimport Router from \"./Routes\";\nimport \"./style/Page.scss\";\n\nfunction App({ isSearching, moviesFound }) {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <div className=\"Page-body\">\n          <Router />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}